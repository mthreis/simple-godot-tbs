[gd_scene load_steps=16 format=1]

[ext_resource path="res://assets/materials/gradient.tres" type="Shader" id=1]
[ext_resource path="res://px.png" type="Texture" id=2]
[ext_resource path="res://assets/tilesets/grasslands.tres" type="TileSet" id=3]
[ext_resource path="res://assets/scripts/world.gd" type="Script" id=4]
[ext_resource path="res://assets/tilesets/arena.tres" type="TileSet" id=5]
[ext_resource path="res://assets/textures/battle/move_marker.png" type="Texture" id=6]
[ext_resource path="res://assets/textures/battle/cursor.png" type="Texture" id=7]
[ext_resource path="res://assets/prefabs/cyborg.tscn" type="PackedScene" id=8]

[sub_resource type="CanvasItemMaterial" id=1]

shader/shader = ExtResource( 1 )
shader/shading_mode = 0
shader_param/top = Color( 0.248909, 0.204849, 0.292969, 1 )
shader_param/bottom = Color( 0.0282059, 0.026123, 0.03125, 1 )
shader_param/shades = 1.0

[sub_resource type="Animation" id=2]

resource/name = "init"
length = 2.0
loop = false
step = 0.1
tracks/0/type = "value"
tracks/0/path = NodePath(".:material/material:shader_param/shades")
tracks/0/interp = 2
tracks/0/imported = false
tracks/0/keys = {
"times": FloatArray( 0, 2 ),
"transitions": FloatArray( 1, 1 ),
"update": 0,
"values": [ 1.0, 64.0 ]
}

[sub_resource type="GDScript" id=3]

script/source = "extends AnimationPlayer

# class member variables go here, for example:
# var a = 2
# var b = \"textvar\"

func _ready():
	play(\"init\")
	pass
"

[sub_resource type="GDScript" id=4]

script/source = "extends Sprite

var world
var offset
var gridPos

func _ready():
	world = get_parent()
	offset = get_offset()
	gridPos = world.world_to_map(get_pos())
	
	world.fix_pos(self, -8)
	#set_offset(offset + world.get_heightmap_at_v(gridPos))"

[sub_resource type="Animation" id=5]

resource/name = "go_down"
length = 0.5
loop = false
step = 0.1
tracks/0/type = "value"
tracks/0/path = NodePath(".:visibility/opacity")
tracks/0/interp = 2
tracks/0/imported = false
tracks/0/keys = {
"times": FloatArray( 0, 0.5 ),
"transitions": FloatArray( 1, 1 ),
"update": 0,
"values": [ 1.0, 0.2 ]
}

[sub_resource type="Animation" id=6]

resource/name = "go_up"
length = 1.0
loop = false
step = 0.1
tracks/0/type = "value"
tracks/0/path = NodePath(".:visibility/opacity")
tracks/0/interp = 1
tracks/0/imported = false
tracks/0/keys = {
"times": FloatArray( 0, 0.5 ),
"transitions": FloatArray( 1, 1 ),
"update": 0,
"values": [ 0.2, 1.0 ]
}

[sub_resource type="GDScript" id=7]

script/source = "extends Sprite

onready var world = get_parent()
var gridPos
var locked = false

var off = 1


var markers = []

signal has_moved

func _ready():
	set_process_input(true)
	world.fix_pos(self, -2)
	
	
	if world != null:
		gridPos = world.world_to_map(get_pos())
		

func _input(ev):
	if world == null || locked:
		return
	
	var cSize = world.get_cell_size()
	var mx = cSize.x / 2
	var my = cSize.y / 2
	
	
	
	
	if ev.is_action_pressed(\"ui_right\"):
		var n = world.get_cell(gridPos.x + 1, gridPos.y)
		
		if n >= 0:
			teleport_to(gridPos.x + 1, gridPos.y )
			emit_signal(\"has_moved\")
		else:
			for i in range(3):
				var _n = world.get_cell(gridPos.x + 1 + i, gridPos.y)
				
				if _n >= 0:
					teleport_to(gridPos.x + 1 + i, gridPos.y)
					emit_signal(\"has_moved\")
					break
	
	elif ev.is_action_pressed(\"ui_up\"):
		var n = world.get_cell(gridPos.x , gridPos.y - 1)
		
		if n >= 0:
			teleport_to(gridPos.x, gridPos.y - 1)
			emit_signal(\"has_moved\")
		else:
			for i in range(3):
				var _n = world.get_cell(gridPos.x , gridPos.y - 1 - i)
				
				if _n >= 0:
					teleport_to(gridPos.x , gridPos.y - 1 - i)
					emit_signal(\"has_moved\")
					break
	
	elif ev.is_action_pressed(\"ui_down\"):
		var n = world.get_cell(gridPos.x , gridPos.y + 1)
		
		if n >= 0:
			teleport_to(gridPos.x, gridPos.y + 1)
			emit_signal(\"has_moved\")
		else:
			for i in range(3):
				var _n = world.get_cell(gridPos.x , gridPos.y + 1 + i)
				
				if _n >= 0:
					teleport_to(gridPos.x , gridPos.y + 1 + i)
					emit_signal(\"has_moved\")
					break
	
	elif ev.is_action_pressed(\"ui_left\"):
		var n = world.get_cell(gridPos.x - 1, gridPos.y)
		
		if n >= 0:
			teleport_to(gridPos.x - 1, gridPos.y)
			emit_signal(\"has_moved\")
		else:
			for i in range(3):
				var _n = world.get_cell(gridPos.x - 1 - i, gridPos.y)
				
				if _n >= 0:
					teleport_to(gridPos.x - 1 - i, gridPos.y)
					emit_signal(\"has_moved\")
					break
	
	elif ev.is_action_pressed(\"ui_accept\"):
		var m = get_parent().get_node(\"cyborg\").get_movable_panels()
		
		for i in markers:
			i.queue_free()
			
		markers.clear()
		
		for i in m:
			var mk = preload(\"res://assets/prefabs/battle/move_marker.tscn\").instance()
			world.add_child(mk)
			mk.set_owner(world)
			
			mk.set_pos(world.map_to_world(i) + Vector2(0, 0))
			mk.set_offset(mk.offset - Vector2(0, world.get_heightmap_at_v(i)))
			
			markers.append(mk)
	
	elif ev.is_action_pressed(\"ui_cancel\"):
		get_parent().get_node(\"cyborg\").teleport_to_v(gridPos)


func teleport_to(x, y):
	var pos = world.map_to_world(Vector2(x, y))
	
	gridPos = Vector2(x, y)
	
	set_pos(pos + Vector2(0, off))
	var height = world.get_heightmap_at_v(gridPos)
	get_node(\"sprite\").set_pos(Vector2(0, -height))"

[node name="Scene" type="Node"]

[node name="canvas" type="CanvasLayer" parent="."]

editor/display_folded = true
layer = -1
offset = Vector2( 0, 0 )
rotation = 0.0
scale = Vector2( 1, 1 )

[node name="background" type="TextureFrame" parent="canvas"]

material/material = SubResource( 1 )
anchor/right = 1
anchor/bottom = 1
focus/ignore_mouse = true
focus/stop_mouse = true
size_flags/horizontal = 2
size_flags/vertical = 2
margin/left = 0.0
margin/top = 0.0
margin/right = 0.0
margin/bottom = 0.0
texture = ExtResource( 2 )
expand = true
stretch_mode = 0

[node name="animator" type="AnimationPlayer" parent="canvas/background"]

playback/process_mode = 1
playback/default_blend_time = 0.0
root/root = NodePath("..")
anims/init = SubResource( 2 )
playback/active = true
playback/speed = 0.1
blend_times = [  ]
autoplay = ""
script/script = SubResource( 3 )

[node name="world" type="TileMap" parent="."]

mode = 1
tile_set = ExtResource( 3 )
cell/size = Vector2( 32, 16 )
cell/quadrant_size = 16
cell/custom_transform = Matrix32( 1, 0, 0, 1, 0, 0 )
cell/half_offset = 2
cell/tile_origin = 0
cell/y_sort = true
collision/use_kinematic = false
collision/friction = 1.0
collision/bounce = 0.0
collision/layers = 1
collision/mask = 1
occluder/light_mask = 1
tile_data = IntArray( 0, 6, 1, 5, 3, 3, 4, 2, 65536, 4, 65539, 2, 65540, 1, 65541, 2, 131072, 1, 131073, 8, 131074, 1, 131075, 1, 131076, 1, 196608, 3, 196610, 0, 196611, 1, 196612, 2, 262144, 5, 262145, 2, 262146, 0, 262147, 0 )
script/script = ExtResource( 4 )
__meta__ = {
"_edit_lock_": true
}
pixelsPerHeight = 6

[node name="arena" type="TileMap" parent="world"]

z/z = -10
mode = 1
tile_set = ExtResource( 5 )
cell/size = Vector2( 32, 16 )
cell/quadrant_size = 16
cell/custom_transform = Matrix32( 1, 0, 0, 1, 0, 0 )
cell/half_offset = 2
cell/tile_origin = 0
cell/y_sort = false
collision/use_kinematic = false
collision/friction = 1.0
collision/bounce = 0.0
collision/layers = 1
collision/mask = 1
occluder/light_mask = 1
tile_data = IntArray( -1, 0, -65536, 0, -65535, 0, -65534, 2, -65533, 3, -65532, 0, -65531, 0, 65535, 0, 131071, 0, 196607, 0, 262143, 0, 327679, 0 )
__meta__ = {
"_edit_lock_": true
}

[node name="moveMarker" type="Sprite" parent="world"]

editor/display_folded = true
visibility/opacity = 0.4
transform/pos = Vector2( -32, 48 )
texture = ExtResource( 6 )
offset = Vector2( 0, 8 )
script/script = SubResource( 4 )

[node name="blink" type="AnimationPlayer" parent="world/moveMarker"]

playback/process_mode = 1
playback/default_blend_time = 0.0
root/root = NodePath("..")
anims/go_down = SubResource( 5 )
anims/go_up = SubResource( 6 )
playback/active = false
playback/speed = 1.0
blend_times = [  ]
autoplay = ""

[node name="cursor" type="Sprite" parent="world"]

editor/display_folded = true
transform/pos = Vector2( -16, 40 )
script/script = SubResource( 7 )

[node name="sprite" type="Sprite" parent="world/cursor"]

texture = ExtResource( 7 )
offset = Vector2( 0, 7 )

[node name="cyborg" parent="world" groups=[
"actors",
] instance=ExtResource( 8 )]

transform/pos = Vector2( -106, 43 )

[node name="wounded" parent="world/cyborg/sprite"]

offset = Vector2( 0, 16 )

[node name="stats" parent="world/cyborg"]

move = 2

[node name="camera" type="Camera2D" parent="."]

transform/pos = Vector2( 4, 1 )
anchor_mode = 1
rotating = false
current = true
zoom = Vector2( 0.3333, 0.3333 )
limit/left = -10000000
limit/top = -10000000
limit/right = 10000000
limit/bottom = 10000000
drag_margin/h_enabled = true
drag_margin/v_enabled = true
smoothing/enable = false
smoothing/speed = 5.0
drag_margin/left = 0.2
drag_margin/top = 0.2
drag_margin/right = 0.2
drag_margin/bottom = 0.2


[editable path="world/cyborg"]
